# Fixed Dockerfile that regenerates package-lock.json if needed
FROM node:20-alpine AS builder

# Install curl for health checks
RUN apk add --no-cache curl

# Set working directory
WORKDIR /app

# Copy package.json first
COPY package.json ./

# Remove existing package-lock.json if it exists and regenerate
RUN rm -f package-lock.json

# Install dependencies and generate new lock file
RUN npm install

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine AS runtime

# Install curl for health checks
RUN apk add --no-cache curl

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S sveltekit -u 1001

# Set working directory
WORKDIR /app

# Copy package.json
COPY package.json ./

# Install production dependencies only
RUN npm install --production --no-package-lock

# Copy built application from builder
COPY --from=builder --chown=sveltekit:nodejs /app/build ./build

# Switch to non-root user
USER sveltekit

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/ || exit 1

# Start the application
CMD ["node", "build"]
